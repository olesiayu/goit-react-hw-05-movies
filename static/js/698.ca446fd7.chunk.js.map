{"version":3,"file":"static/js/698.ca446fd7.chunk.js","mappings":"oOACA,EAAuB,+BAAvB,EAA6D,+B,SCI9C,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAA4BN,GAASO,KAAKH,KACzC,CAACJ,KAGF,gCACGG,IACC,iCACE,mBAAQK,QAAS,kBAAMV,GAAU,IAAjC,sBACA,iBAAKW,UAAWC,EAAhB,WACE,gBACEC,IAAG,yCAAoCR,EAAMS,aAC7CC,IAAKV,EAAMW,SAEb,iBAAKL,UAAWC,EAAhB,WACE,0BACGP,EAAMW,OACP,gCAAQ,IAAIC,KAAKZ,EAAMa,cAAcC,cAArC,WAEF,wCAAsC,IAArBd,EAAMe,aAAsB,GAA7C,QACA,sCACA,uBAAIf,EAAMgB,YACV,oCACA,uBAAIhB,EAAMiB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,iBAKvD,mBACA,4BACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,sBAEF,SAAC,KAAD,S,oLCnDAC,EAAW,gCACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,yGAAsCC,EAAtC,+BAA4C,GAA5C,SACyBC,MAAMD,GAD/B,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOT,EAAuB,GAAD,OACxBF,EADwB,sCACcC,EADd,YAKxB,SAASW,EAAkBC,GAChC,OAAOX,EAAuB,GAAD,OACxBF,EADwB,gCACQC,EADR,kBACyBY,IAIjD,SAASC,EAAkBC,GAChC,OAAOb,EAAuB,GAAD,OACxBF,EADwB,iBACPe,EADO,oBACad,IAIrC,SAASe,EAAYD,GAC1B,OAAOb,EAAuB,GAAD,OACxBF,EADwB,iBACPe,EADO,4BACqBd,IAI7C,SAASgB,EAAkBF,GAChC,OAAOb,EAAuB,GAAD,OACxBF,EADwB,iBACPe,EADO,4BACqBd","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetailsPage/MovieDetailsPage.module.css?377f","components/MovieDetailsPage/MovieDetailsPage.js","services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"film\":\"MovieDetailsPage_film__JOaq5\",\"info\":\"MovieDetailsPage_info__3IUJv\"};","import { useEffect, useState } from 'react';\nimport { Link, useParams, useNavigate, Outlet } from 'react-router-dom';\nimport * as moviesAPI from 'services/movies-api';\nimport s from './MovieDetailsPage.module.css';\n\nexport default function MovieDetailsPage() {\n  const navigate = useNavigate();\n  const { movieID } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    moviesAPI.fetchMovieDetails(movieID).then(setMovie);\n  }, [movieID]);\n\n  return (\n    <>\n      {movie && (\n        <>\n          <button onClick={() => navigate(-1)}>Go back</button>\n          <div className={s.film}>\n            <img\n              src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n              alt={movie.title}\n            />\n            <div className={s.info}>\n              <h2>\n                {movie.title}\n                <span>({new Date(movie.release_date).getFullYear()})</span>\n              </h2>\n              <p>User Score: {(movie.vote_average * 100) / 10}%</p>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n              <h3>Genres</h3>\n              <p>{movie.genres.map(genre => genre.name).join(' ')}</p>\n            </div>\n          </div>\n        </>\n      )}\n      <hr />\n      <div>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <hr />\n      </div>\n      <Outlet />\n    </>\n  );\n}\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '919ec07d97461f424c0dcb1ca8e5ed20';\n\nasync function fetchWithErrorHandling(url = '') {\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchPopularFims() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n}\n\nexport function fetchSearchMovies(searchQuery) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchQuery}`\n  );\n}\n\nexport function fetchMovieDetails(movie_id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movie_id}?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchActors(movie_id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movie_id}/credits?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieReviews(movie_id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movie_id}/reviews?api_key=${API_KEY}`\n  );\n}\n"],"names":["MovieDetailsPage","navigate","useNavigate","movieID","useParams","useState","movie","setMovie","useEffect","moviesAPI","then","onClick","className","s","src","poster_path","alt","title","Date","release_date","getFullYear","vote_average","overview","genres","map","genre","name","join","to","BASE_URL","API_KEY","fetchWithErrorHandling","url","fetch","response","ok","json","Promise","reject","Error","fetchPopularFims","fetchSearchMovies","searchQuery","fetchMovieDetails","movie_id","fetchActors","fetchMovieReviews"],"sourceRoot":""}