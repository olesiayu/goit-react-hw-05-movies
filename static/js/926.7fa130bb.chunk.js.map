{"version":3,"file":"static/js/926.7fa130bb.chunk.js","mappings":"sPASe,SAASA,IACtB,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BL,EAAAA,EAAAA,UAAS,IAAnC,eAAOM,EAAP,KAAcC,EAAd,KAGMC,IAFWC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,MACGN,EAAaO,IAAI,WAErCC,EAAAA,EAAAA,YAAU,WACJJ,GACFK,EAAAA,GAA4BL,GAAaM,MAAK,SAAAC,GAC5Cb,GAAe,OAAIa,EAAOC,eAG7B,CAACR,IAmBJ,OACE,iCACE,kBAAMS,SAfW,SAAAC,GAGnB,GAFAA,EAAMC,iBAEQ,KAAVb,EAGF,OAFAJ,EAAe,IACfG,EAAgB,IACTe,MAAM,wBAEff,EAAgB,CAAEC,MAAAA,IAElBC,EAAS,KAKP,WACE,kBACEc,KAAK,OACLC,KAAK,QACLC,MAAOjB,EACPkB,SAxBkB,SAAAN,GACxBX,EAASW,EAAMO,cAAcF,MAAMG,gBAwB7BC,aAAa,MACbC,WAAS,EACTC,YAAY,kBAGd,mBAAQR,KAAK,SAAb,UACE,0CAIHpB,IACC,wBACGA,EAAY6B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAb,SAAoBC,KADbD,a,oLC/DfG,EAAW,gCACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,yGAAsCC,EAAtC,+BAA4C,GAA5C,SACyBC,MAAMD,GAD/B,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOT,EAAuB,GAAD,OACxBF,EADwB,sCACcC,EADd,YAKxB,SAASW,EAAkBtC,GAChC,OAAO4B,EAAuB,GAAD,OACxBF,EADwB,gCACQC,EADR,kBACyB3B,IAIjD,SAASuC,EAAkBC,GAChC,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,iBACPc,EADO,oBACab,IAIrC,SAASc,EAAYD,GAC1B,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,iBACPc,EADO,4BACqBb,IAI7C,SAASe,EAAkBF,GAChC,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,iBACPc,EADO,4BACqBb,M,8EChCrC,SAASgB,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE","sources":["components/MoviesPage/MoviesPage.js","services/movies-api.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport {\r\n  Link,\r\n  useLocation,\r\n  useSearchParams,\r\n  useNavigate,\r\n} from 'react-router-dom';\r\nimport * as moviesAPI from 'services/movies-api';\r\n\r\nexport default function MoviesPage() {\r\n  const [searchMovie, setSearchMovie] = useState([]);\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [query, setQuery] = useState('');\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const searchQuery = searchParams.get('query');\r\n\r\n  useEffect(() => {\r\n    if (searchQuery) {\r\n      moviesAPI.fetchSearchMovies(searchQuery).then(movies => {\r\n        setSearchMovie([...movies.results]);\r\n      });\r\n    }\r\n  }, [searchQuery]);\r\n\r\n  const handleMovieChange = event => {\r\n    setQuery(event.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (query === '') {\r\n      setSearchMovie([]);\r\n      setSearchParams('');\r\n      return alert('Enter a search query');\r\n    }\r\n    setSearchParams({ query });\r\n\r\n    setQuery('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"query\"\r\n          value={query}\r\n          onChange={handleMovieChange}\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search movie\"\r\n        />\r\n\r\n        <button type=\"submit\">\r\n          <span>Search</span>\r\n        </button>\r\n      </form>\r\n\r\n      {searchMovie && (\r\n        <ul>\r\n          {searchMovie.map(({ id, title }) => (\r\n            <li key={id}>\r\n              <Link to={`${id}`}>{title}</Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","const BASE_URL = 'https://api.themoviedb.org/3/';\r\nconst API_KEY = '919ec07d97461f424c0dcb1ca8e5ed20';\r\n\r\nasync function fetchWithErrorHandling(url = '') {\r\n  const response = await fetch(url);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error('Not found'));\r\n}\r\n\r\nexport function fetchPopularFims() {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=1`\r\n  );\r\n}\r\n\r\nexport function fetchSearchMovies(searchQuery) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchQuery}`\r\n  );\r\n}\r\n\r\nexport function fetchMovieDetails(movie_id) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}movie/${movie_id}?api_key=${API_KEY}`\r\n  );\r\n}\r\n\r\nexport function fetchActors(movie_id) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}movie/${movie_id}/credits?api_key=${API_KEY}`\r\n  );\r\n}\r\n\r\nexport function fetchMovieReviews(movie_id) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}movie/${movie_id}/reviews?api_key=${API_KEY}`\r\n  );\r\n}\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["MoviesPage","useState","searchMovie","setSearchMovie","useSearchParams","searchParams","setSearchParams","query","setQuery","searchQuery","useLocation","useNavigate","get","useEffect","moviesAPI","then","movies","results","onSubmit","event","preventDefault","alert","type","name","value","onChange","currentTarget","toLowerCase","autoComplete","autoFocus","placeholder","map","id","title","to","BASE_URL","API_KEY","fetchWithErrorHandling","url","fetch","response","ok","json","Promise","reject","Error","fetchPopularFims","fetchSearchMovies","fetchMovieDetails","movie_id","fetchActors","fetchMovieReviews","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}